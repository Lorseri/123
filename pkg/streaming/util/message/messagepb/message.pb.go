// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package messagepb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// FlushMessagePayload is the payload of flush message.
type FlushMessagePayload struct {
	CollectionId         int64    `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	SegmentId            []int64  `protobuf:"varint,2,rep,packed,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlushMessagePayload) Reset()         { *m = FlushMessagePayload{} }
func (m *FlushMessagePayload) String() string { return proto.CompactTextString(m) }
func (*FlushMessagePayload) ProtoMessage()    {}
func (*FlushMessagePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *FlushMessagePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushMessagePayload.Unmarshal(m, b)
}
func (m *FlushMessagePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushMessagePayload.Marshal(b, m, deterministic)
}
func (m *FlushMessagePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushMessagePayload.Merge(m, src)
}
func (m *FlushMessagePayload) XXX_Size() int {
	return xxx_messageInfo_FlushMessagePayload.Size(m)
}
func (m *FlushMessagePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushMessagePayload.DiscardUnknown(m)
}

var xxx_messageInfo_FlushMessagePayload proto.InternalMessageInfo

func (m *FlushMessagePayload) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *FlushMessagePayload) GetSegmentId() []int64 {
	if m != nil {
		return m.SegmentId
	}
	return nil
}

// TimeTickMessageHeader just nothing.
type TimeTickMessageHeader struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeTickMessageHeader) Reset()         { *m = TimeTickMessageHeader{} }
func (m *TimeTickMessageHeader) String() string { return proto.CompactTextString(m) }
func (*TimeTickMessageHeader) ProtoMessage()    {}
func (*TimeTickMessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *TimeTickMessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeTickMessageHeader.Unmarshal(m, b)
}
func (m *TimeTickMessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeTickMessageHeader.Marshal(b, m, deterministic)
}
func (m *TimeTickMessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeTickMessageHeader.Merge(m, src)
}
func (m *TimeTickMessageHeader) XXX_Size() int {
	return xxx_messageInfo_TimeTickMessageHeader.Size(m)
}
func (m *TimeTickMessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeTickMessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_TimeTickMessageHeader proto.InternalMessageInfo

// InsertMessageHeader is the header of insert message.
type InsertMessageHeader struct {
	CollectionId         int64                         `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Partitions           []*PartitionSegmentAssignment `protobuf:"bytes,2,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *InsertMessageHeader) Reset()         { *m = InsertMessageHeader{} }
func (m *InsertMessageHeader) String() string { return proto.CompactTextString(m) }
func (*InsertMessageHeader) ProtoMessage()    {}
func (*InsertMessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *InsertMessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertMessageHeader.Unmarshal(m, b)
}
func (m *InsertMessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertMessageHeader.Marshal(b, m, deterministic)
}
func (m *InsertMessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertMessageHeader.Merge(m, src)
}
func (m *InsertMessageHeader) XXX_Size() int {
	return xxx_messageInfo_InsertMessageHeader.Size(m)
}
func (m *InsertMessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertMessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_InsertMessageHeader proto.InternalMessageInfo

func (m *InsertMessageHeader) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *InsertMessageHeader) GetPartitions() []*PartitionSegmentAssignment {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// PartitionSegmentAssignment is the segment assignment of a partition.
type PartitionSegmentAssignment struct {
	PartitionId          int64              `protobuf:"varint,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	Rows                 uint64             `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"`
	BinarySize           uint64             `protobuf:"varint,3,opt,name=binary_size,json=binarySize,proto3" json:"binary_size,omitempty"`
	SegmentAssignment    *SegmentAssignment `protobuf:"bytes,4,opt,name=segment_assignment,json=segmentAssignment,proto3" json:"segment_assignment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PartitionSegmentAssignment) Reset()         { *m = PartitionSegmentAssignment{} }
func (m *PartitionSegmentAssignment) String() string { return proto.CompactTextString(m) }
func (*PartitionSegmentAssignment) ProtoMessage()    {}
func (*PartitionSegmentAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *PartitionSegmentAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionSegmentAssignment.Unmarshal(m, b)
}
func (m *PartitionSegmentAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionSegmentAssignment.Marshal(b, m, deterministic)
}
func (m *PartitionSegmentAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionSegmentAssignment.Merge(m, src)
}
func (m *PartitionSegmentAssignment) XXX_Size() int {
	return xxx_messageInfo_PartitionSegmentAssignment.Size(m)
}
func (m *PartitionSegmentAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionSegmentAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionSegmentAssignment proto.InternalMessageInfo

func (m *PartitionSegmentAssignment) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *PartitionSegmentAssignment) GetRows() uint64 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *PartitionSegmentAssignment) GetBinarySize() uint64 {
	if m != nil {
		return m.BinarySize
	}
	return 0
}

func (m *PartitionSegmentAssignment) GetSegmentAssignment() *SegmentAssignment {
	if m != nil {
		return m.SegmentAssignment
	}
	return nil
}

// SegmentAssignment is the assignment of a segment.
type SegmentAssignment struct {
	SegmentId            int64    `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentAssignment) Reset()         { *m = SegmentAssignment{} }
func (m *SegmentAssignment) String() string { return proto.CompactTextString(m) }
func (*SegmentAssignment) ProtoMessage()    {}
func (*SegmentAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{4}
}

func (m *SegmentAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentAssignment.Unmarshal(m, b)
}
func (m *SegmentAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentAssignment.Marshal(b, m, deterministic)
}
func (m *SegmentAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentAssignment.Merge(m, src)
}
func (m *SegmentAssignment) XXX_Size() int {
	return xxx_messageInfo_SegmentAssignment.Size(m)
}
func (m *SegmentAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentAssignment proto.InternalMessageInfo

func (m *SegmentAssignment) GetSegmentId() int64 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

// DeleteMessageHeader
type DeleteMessageHeader struct {
	CollectionId         int64    `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMessageHeader) Reset()         { *m = DeleteMessageHeader{} }
func (m *DeleteMessageHeader) String() string { return proto.CompactTextString(m) }
func (*DeleteMessageHeader) ProtoMessage()    {}
func (*DeleteMessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{5}
}

func (m *DeleteMessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMessageHeader.Unmarshal(m, b)
}
func (m *DeleteMessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMessageHeader.Marshal(b, m, deterministic)
}
func (m *DeleteMessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMessageHeader.Merge(m, src)
}
func (m *DeleteMessageHeader) XXX_Size() int {
	return xxx_messageInfo_DeleteMessageHeader.Size(m)
}
func (m *DeleteMessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMessageHeader proto.InternalMessageInfo

func (m *DeleteMessageHeader) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

// FlushMessageHeader just nothing.
type FlushMessageHeader struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlushMessageHeader) Reset()         { *m = FlushMessageHeader{} }
func (m *FlushMessageHeader) String() string { return proto.CompactTextString(m) }
func (*FlushMessageHeader) ProtoMessage()    {}
func (*FlushMessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{6}
}

func (m *FlushMessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushMessageHeader.Unmarshal(m, b)
}
func (m *FlushMessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushMessageHeader.Marshal(b, m, deterministic)
}
func (m *FlushMessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushMessageHeader.Merge(m, src)
}
func (m *FlushMessageHeader) XXX_Size() int {
	return xxx_messageInfo_FlushMessageHeader.Size(m)
}
func (m *FlushMessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushMessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_FlushMessageHeader proto.InternalMessageInfo

// CreateCollectionMessageHeader is the header of create collection message.
type CreateCollectionMessageHeader struct {
	CollectionId         int64    `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCollectionMessageHeader) Reset()         { *m = CreateCollectionMessageHeader{} }
func (m *CreateCollectionMessageHeader) String() string { return proto.CompactTextString(m) }
func (*CreateCollectionMessageHeader) ProtoMessage()    {}
func (*CreateCollectionMessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{7}
}

func (m *CreateCollectionMessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCollectionMessageHeader.Unmarshal(m, b)
}
func (m *CreateCollectionMessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCollectionMessageHeader.Marshal(b, m, deterministic)
}
func (m *CreateCollectionMessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCollectionMessageHeader.Merge(m, src)
}
func (m *CreateCollectionMessageHeader) XXX_Size() int {
	return xxx_messageInfo_CreateCollectionMessageHeader.Size(m)
}
func (m *CreateCollectionMessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCollectionMessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCollectionMessageHeader proto.InternalMessageInfo

func (m *CreateCollectionMessageHeader) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

// DropCollectionMessageHeader is the header of drop collection message.
type DropCollectionMessageHeader struct {
	CollectionId         int64    `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropCollectionMessageHeader) Reset()         { *m = DropCollectionMessageHeader{} }
func (m *DropCollectionMessageHeader) String() string { return proto.CompactTextString(m) }
func (*DropCollectionMessageHeader) ProtoMessage()    {}
func (*DropCollectionMessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{8}
}

func (m *DropCollectionMessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropCollectionMessageHeader.Unmarshal(m, b)
}
func (m *DropCollectionMessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropCollectionMessageHeader.Marshal(b, m, deterministic)
}
func (m *DropCollectionMessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropCollectionMessageHeader.Merge(m, src)
}
func (m *DropCollectionMessageHeader) XXX_Size() int {
	return xxx_messageInfo_DropCollectionMessageHeader.Size(m)
}
func (m *DropCollectionMessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_DropCollectionMessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_DropCollectionMessageHeader proto.InternalMessageInfo

func (m *DropCollectionMessageHeader) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

// CreatePartitionMessageHeader is the header of create partition message.
type CreatePartitionMessageHeader struct {
	CollectionId         int64    `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	PartitionId          int64    `protobuf:"varint,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePartitionMessageHeader) Reset()         { *m = CreatePartitionMessageHeader{} }
func (m *CreatePartitionMessageHeader) String() string { return proto.CompactTextString(m) }
func (*CreatePartitionMessageHeader) ProtoMessage()    {}
func (*CreatePartitionMessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{9}
}

func (m *CreatePartitionMessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePartitionMessageHeader.Unmarshal(m, b)
}
func (m *CreatePartitionMessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePartitionMessageHeader.Marshal(b, m, deterministic)
}
func (m *CreatePartitionMessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePartitionMessageHeader.Merge(m, src)
}
func (m *CreatePartitionMessageHeader) XXX_Size() int {
	return xxx_messageInfo_CreatePartitionMessageHeader.Size(m)
}
func (m *CreatePartitionMessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePartitionMessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePartitionMessageHeader proto.InternalMessageInfo

func (m *CreatePartitionMessageHeader) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *CreatePartitionMessageHeader) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

// DropPartitionMessageHeader is the header of drop partition message.
type DropPartitionMessageHeader struct {
	CollectionId         int64    `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	PartitionId          int64    `protobuf:"varint,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropPartitionMessageHeader) Reset()         { *m = DropPartitionMessageHeader{} }
func (m *DropPartitionMessageHeader) String() string { return proto.CompactTextString(m) }
func (*DropPartitionMessageHeader) ProtoMessage()    {}
func (*DropPartitionMessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{10}
}

func (m *DropPartitionMessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropPartitionMessageHeader.Unmarshal(m, b)
}
func (m *DropPartitionMessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropPartitionMessageHeader.Marshal(b, m, deterministic)
}
func (m *DropPartitionMessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropPartitionMessageHeader.Merge(m, src)
}
func (m *DropPartitionMessageHeader) XXX_Size() int {
	return xxx_messageInfo_DropPartitionMessageHeader.Size(m)
}
func (m *DropPartitionMessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_DropPartitionMessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_DropPartitionMessageHeader proto.InternalMessageInfo

func (m *DropPartitionMessageHeader) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *DropPartitionMessageHeader) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func init() {
	proto.RegisterType((*FlushMessagePayload)(nil), "milvus.proto.message.FlushMessagePayload")
	proto.RegisterType((*TimeTickMessageHeader)(nil), "milvus.proto.message.TimeTickMessageHeader")
	proto.RegisterType((*InsertMessageHeader)(nil), "milvus.proto.message.InsertMessageHeader")
	proto.RegisterType((*PartitionSegmentAssignment)(nil), "milvus.proto.message.PartitionSegmentAssignment")
	proto.RegisterType((*SegmentAssignment)(nil), "milvus.proto.message.SegmentAssignment")
	proto.RegisterType((*DeleteMessageHeader)(nil), "milvus.proto.message.DeleteMessageHeader")
	proto.RegisterType((*FlushMessageHeader)(nil), "milvus.proto.message.FlushMessageHeader")
	proto.RegisterType((*CreateCollectionMessageHeader)(nil), "milvus.proto.message.CreateCollectionMessageHeader")
	proto.RegisterType((*DropCollectionMessageHeader)(nil), "milvus.proto.message.DropCollectionMessageHeader")
	proto.RegisterType((*CreatePartitionMessageHeader)(nil), "milvus.proto.message.CreatePartitionMessageHeader")
	proto.RegisterType((*DropPartitionMessageHeader)(nil), "milvus.proto.message.DropPartitionMessageHeader")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0x4d, 0xab, 0xd3, 0x40,
	0x14, 0x25, 0x2f, 0x45, 0xf0, 0xe6, 0xbd, 0x45, 0xa7, 0x15, 0x4b, 0xb5, 0x58, 0xe3, 0xc2, 0x6c,
	0x4c, 0xa4, 0xee, 0x5c, 0x69, 0x5b, 0xc4, 0x2c, 0x84, 0x92, 0x16, 0x41, 0x37, 0x65, 0x92, 0x5c,
	0xd3, 0xa1, 0x49, 0x26, 0xcc, 0x4c, 0x94, 0xf6, 0x37, 0xf8, 0xd3, 0xfc, 0x51, 0x92, 0x8f, 0xa6,
	0x9f, 0x82, 0x56, 0xde, 0x2a, 0xf7, 0x9e, 0xb9, 0xdc, 0x7b, 0x4e, 0xce, 0x81, 0xbb, 0x04, 0xa5,
	0xa4, 0x11, 0xda, 0x99, 0xe0, 0x8a, 0x93, 0x6e, 0xc2, 0xe2, 0xef, 0xb9, 0xac, 0x3a, 0xbb, 0x7e,
	0x33, 0xbf, 0x40, 0xe7, 0x43, 0x9c, 0xcb, 0xd5, 0xa7, 0xaa, 0x9f, 0xd1, 0x4d, 0xcc, 0x69, 0x48,
	0x5e, 0xc0, 0x5d, 0xc0, 0xe3, 0x18, 0x03, 0xc5, 0x78, 0xba, 0x64, 0x61, 0x4f, 0x1b, 0x6a, 0x96,
	0xee, 0xdd, 0xee, 0x41, 0x37, 0x24, 0x03, 0x00, 0x89, 0x51, 0x82, 0xa9, 0x2a, 0x26, 0x6e, 0x86,
	0xba, 0xa5, 0x7b, 0x0f, 0x6b, 0xc4, 0x0d, 0xcd, 0xc7, 0xf0, 0x68, 0xc1, 0x12, 0x5c, 0xb0, 0x60,
	0x5d, 0x6f, 0xff, 0x88, 0x34, 0x44, 0x61, 0xfe, 0xd4, 0xa0, 0xe3, 0xa6, 0x12, 0x85, 0x3a, 0xc2,
	0xff, 0xee, 0xe8, 0x0c, 0x20, 0xa3, 0x42, 0xb1, 0xa2, 0x95, 0xe5, 0x51, 0x63, 0xf4, 0xda, 0xbe,
	0xa4, 0xcd, 0x9e, 0xed, 0xe6, 0xe6, 0x15, 0xa7, 0xf7, 0x52, 0xb2, 0x28, 0x2d, 0x2a, 0xef, 0x60,
	0x87, 0xf9, 0x4b, 0x83, 0xfe, 0x9f, 0x47, 0xc9, 0x73, 0xb8, 0x6d, 0x86, 0xf7, 0xa4, 0x8c, 0x06,
	0x73, 0x43, 0x42, 0xa0, 0x25, 0xf8, 0x8f, 0x82, 0x8d, 0x66, 0xb5, 0xbc, 0xb2, 0x26, 0xcf, 0xc0,
	0xf0, 0x59, 0x4a, 0xc5, 0x66, 0x29, 0xd9, 0x16, 0x7b, 0x7a, 0xf9, 0x04, 0x15, 0x34, 0x67, 0x5b,
	0x24, 0x9f, 0x81, 0xec, 0xfe, 0x1e, 0x6d, 0xae, 0xf5, 0x5a, 0x43, 0xcd, 0x32, 0x46, 0x2f, 0x2f,
	0x0b, 0x3a, 0xd7, 0xd1, 0x96, 0xa7, 0x90, 0x39, 0x82, 0xf6, 0xb9, 0x88, 0x63, 0xab, 0x2a, 0x09,
	0x07, 0x56, 0xbd, 0x85, 0xce, 0x14, 0x63, 0x54, 0xf8, 0xef, 0x86, 0x98, 0x5d, 0x20, 0x87, 0x09,
	0xaa, 0x3d, 0x9e, 0xc2, 0x60, 0x22, 0x90, 0x2a, 0x9c, 0x34, 0xb3, 0x57, 0xec, 0x1e, 0xc3, 0x93,
	0xa9, 0xe0, 0xd9, 0x7f, 0xed, 0xf8, 0x06, 0x4f, 0x2b, 0x26, 0x8d, 0xc7, 0x57, 0xa4, 0xee, 0x34,
	0x04, 0x37, 0x67, 0x21, 0x30, 0x43, 0xe8, 0x17, 0x5c, 0xef, 0xf7, 0xca, 0x78, 0xfc, 0xf5, 0x5d,
	0xc4, 0xd4, 0x2a, 0xf7, 0xed, 0x80, 0x27, 0x4e, 0x95, 0x92, 0x57, 0x8c, 0xd7, 0x95, 0x93, 0xad,
	0x23, 0x47, 0x2a, 0x81, 0x34, 0x61, 0x69, 0xe4, 0xe4, 0x8a, 0xc5, 0x4e, 0x1d, 0x9e, 0xdd, 0x37,
	0xf3, 0xfd, 0x07, 0x65, 0xaa, 0xde, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x2b, 0x90, 0xb0,
	0x21, 0x04, 0x00, 0x00,
}
