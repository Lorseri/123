// Code generated by protoc-gen-go. DO NOT EDIT.
// source: etcd_meta.proto

package etcdpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	commonpb "github.com/milvus-io/milvus/internal/proto/commonpb"
	schemapb "github.com/milvus-io/milvus/internal/proto/schemapb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProxyMeta struct {
	ID                   int64             `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Address              *commonpb.Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ResultChannelIDs     []string          `protobuf:"bytes,3,rep,name=result_channelIDs,json=resultChannelIDs,proto3" json:"result_channelIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProxyMeta) Reset()         { *m = ProxyMeta{} }
func (m *ProxyMeta) String() string { return proto.CompactTextString(m) }
func (*ProxyMeta) ProtoMessage()    {}
func (*ProxyMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_975d306d62b73e88, []int{0}
}

func (m *ProxyMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyMeta.Unmarshal(m, b)
}
func (m *ProxyMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyMeta.Marshal(b, m, deterministic)
}
func (m *ProxyMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyMeta.Merge(m, src)
}
func (m *ProxyMeta) XXX_Size() int {
	return xxx_messageInfo_ProxyMeta.Size(m)
}
func (m *ProxyMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyMeta proto.InternalMessageInfo

func (m *ProxyMeta) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ProxyMeta) GetAddress() *commonpb.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ProxyMeta) GetResultChannelIDs() []string {
	if m != nil {
		return m.ResultChannelIDs
	}
	return nil
}

type IndexInfo struct {
	IndexName            string                   `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexID              int64                    `protobuf:"varint,2,opt,name=indexID,proto3" json:"indexID,omitempty"`
	IndexParams          []*commonpb.KeyValuePair `protobuf:"bytes,3,rep,name=index_params,json=indexParams,proto3" json:"index_params,omitempty"`
	Deleted              bool                     `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *IndexInfo) Reset()         { *m = IndexInfo{} }
func (m *IndexInfo) String() string { return proto.CompactTextString(m) }
func (*IndexInfo) ProtoMessage()    {}
func (*IndexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_975d306d62b73e88, []int{1}
}

func (m *IndexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexInfo.Unmarshal(m, b)
}
func (m *IndexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexInfo.Marshal(b, m, deterministic)
}
func (m *IndexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexInfo.Merge(m, src)
}
func (m *IndexInfo) XXX_Size() int {
	return xxx_messageInfo_IndexInfo.Size(m)
}
func (m *IndexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IndexInfo proto.InternalMessageInfo

func (m *IndexInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *IndexInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *IndexInfo) GetIndexParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.IndexParams
	}
	return nil
}

func (m *IndexInfo) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type FieldIndexInfo struct {
	FiledID              int64    `protobuf:"varint,1,opt,name=filedID,proto3" json:"filedID,omitempty"`
	IndexID              int64    `protobuf:"varint,2,opt,name=indexID,proto3" json:"indexID,omitempty"`
	Deleted              bool     `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldIndexInfo) Reset()         { *m = FieldIndexInfo{} }
func (m *FieldIndexInfo) String() string { return proto.CompactTextString(m) }
func (*FieldIndexInfo) ProtoMessage()    {}
func (*FieldIndexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_975d306d62b73e88, []int{2}
}

func (m *FieldIndexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldIndexInfo.Unmarshal(m, b)
}
func (m *FieldIndexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldIndexInfo.Marshal(b, m, deterministic)
}
func (m *FieldIndexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldIndexInfo.Merge(m, src)
}
func (m *FieldIndexInfo) XXX_Size() int {
	return xxx_messageInfo_FieldIndexInfo.Size(m)
}
func (m *FieldIndexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldIndexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FieldIndexInfo proto.InternalMessageInfo

func (m *FieldIndexInfo) GetFiledID() int64 {
	if m != nil {
		return m.FiledID
	}
	return 0
}

func (m *FieldIndexInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *FieldIndexInfo) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type CollectionInfo struct {
	ID                         int64                      `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Schema                     *schemapb.CollectionSchema `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	CreateTime                 uint64                     `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	PartitionIDs               []int64                    `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	PartitionNames             []string                   `protobuf:"bytes,5,rep,name=partitionNames,proto3" json:"partitionNames,omitempty"`
	FieldIndexes               []*FieldIndexInfo          `protobuf:"bytes,6,rep,name=field_indexes,json=fieldIndexes,proto3" json:"field_indexes,omitempty"`
	VirtualChannelNames        []string                   `protobuf:"bytes,7,rep,name=virtual_channel_names,json=virtualChannelNames,proto3" json:"virtual_channel_names,omitempty"`
	PhysicalChannelNames       []string                   `protobuf:"bytes,8,rep,name=physical_channel_names,json=physicalChannelNames,proto3" json:"physical_channel_names,omitempty"`
	PartitionCreatedTimestamps []uint64                   `protobuf:"varint,9,rep,packed,name=partition_created_timestamps,json=partitionCreatedTimestamps,proto3" json:"partition_created_timestamps,omitempty"`
	ShardsNum                  int32                      `protobuf:"varint,10,opt,name=shards_num,json=shardsNum,proto3" json:"shards_num,omitempty"`
	StartPositions             []*commonpb.KeyDataPair    `protobuf:"bytes,11,rep,name=start_positions,json=startPositions,proto3" json:"start_positions,omitempty"`
	ConsistencyLevel           commonpb.ConsistencyLevel  `protobuf:"varint,12,opt,name=consistency_level,json=consistencyLevel,proto3,enum=milvus.proto.common.ConsistencyLevel" json:"consistency_level,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                   `json:"-"`
	XXX_unrecognized           []byte                     `json:"-"`
	XXX_sizecache              int32                      `json:"-"`
}

func (m *CollectionInfo) Reset()         { *m = CollectionInfo{} }
func (m *CollectionInfo) String() string { return proto.CompactTextString(m) }
func (*CollectionInfo) ProtoMessage()    {}
func (*CollectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_975d306d62b73e88, []int{3}
}

func (m *CollectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionInfo.Unmarshal(m, b)
}
func (m *CollectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionInfo.Marshal(b, m, deterministic)
}
func (m *CollectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionInfo.Merge(m, src)
}
func (m *CollectionInfo) XXX_Size() int {
	return xxx_messageInfo_CollectionInfo.Size(m)
}
func (m *CollectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionInfo proto.InternalMessageInfo

func (m *CollectionInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *CollectionInfo) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CollectionInfo) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CollectionInfo) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func (m *CollectionInfo) GetPartitionNames() []string {
	if m != nil {
		return m.PartitionNames
	}
	return nil
}

func (m *CollectionInfo) GetFieldIndexes() []*FieldIndexInfo {
	if m != nil {
		return m.FieldIndexes
	}
	return nil
}

func (m *CollectionInfo) GetVirtualChannelNames() []string {
	if m != nil {
		return m.VirtualChannelNames
	}
	return nil
}

func (m *CollectionInfo) GetPhysicalChannelNames() []string {
	if m != nil {
		return m.PhysicalChannelNames
	}
	return nil
}

func (m *CollectionInfo) GetPartitionCreatedTimestamps() []uint64 {
	if m != nil {
		return m.PartitionCreatedTimestamps
	}
	return nil
}

func (m *CollectionInfo) GetShardsNum() int32 {
	if m != nil {
		return m.ShardsNum
	}
	return 0
}

func (m *CollectionInfo) GetStartPositions() []*commonpb.KeyDataPair {
	if m != nil {
		return m.StartPositions
	}
	return nil
}

func (m *CollectionInfo) GetConsistencyLevel() commonpb.ConsistencyLevel {
	if m != nil {
		return m.ConsistencyLevel
	}
	return commonpb.ConsistencyLevel_Strong
}

type SegmentIndexInfo struct {
	CollectionID         int64    `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64    `protobuf:"varint,2,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	SegmentID            int64    `protobuf:"varint,3,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	FieldID              int64    `protobuf:"varint,4,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	IndexID              int64    `protobuf:"varint,5,opt,name=indexID,proto3" json:"indexID,omitempty"`
	BuildID              int64    `protobuf:"varint,6,opt,name=buildID,proto3" json:"buildID,omitempty"`
	EnableIndex          bool     `protobuf:"varint,7,opt,name=enable_index,json=enableIndex,proto3" json:"enable_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentIndexInfo) Reset()         { *m = SegmentIndexInfo{} }
func (m *SegmentIndexInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentIndexInfo) ProtoMessage()    {}
func (*SegmentIndexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_975d306d62b73e88, []int{4}
}

func (m *SegmentIndexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentIndexInfo.Unmarshal(m, b)
}
func (m *SegmentIndexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentIndexInfo.Marshal(b, m, deterministic)
}
func (m *SegmentIndexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentIndexInfo.Merge(m, src)
}
func (m *SegmentIndexInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentIndexInfo.Size(m)
}
func (m *SegmentIndexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentIndexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentIndexInfo proto.InternalMessageInfo

func (m *SegmentIndexInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentIndexInfo) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentIndexInfo) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentIndexInfo) GetFieldID() int64 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *SegmentIndexInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *SegmentIndexInfo) GetBuildID() int64 {
	if m != nil {
		return m.BuildID
	}
	return 0
}

func (m *SegmentIndexInfo) GetEnableIndex() bool {
	if m != nil {
		return m.EnableIndex
	}
	return false
}

type CollectionMeta struct {
	ID                   int64                      `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	CreateTime           uint64                     `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	SegmentIDs           []int64                    `protobuf:"varint,4,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	PartitionTags        []string                   `protobuf:"bytes,5,rep,name=partition_tags,json=partitionTags,proto3" json:"partition_tags,omitempty"`
	PartitionIDs         []int64                    `protobuf:"varint,6,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CollectionMeta) Reset()         { *m = CollectionMeta{} }
func (m *CollectionMeta) String() string { return proto.CompactTextString(m) }
func (*CollectionMeta) ProtoMessage()    {}
func (*CollectionMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_975d306d62b73e88, []int{5}
}

func (m *CollectionMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionMeta.Unmarshal(m, b)
}
func (m *CollectionMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionMeta.Marshal(b, m, deterministic)
}
func (m *CollectionMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionMeta.Merge(m, src)
}
func (m *CollectionMeta) XXX_Size() int {
	return xxx_messageInfo_CollectionMeta.Size(m)
}
func (m *CollectionMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionMeta.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionMeta proto.InternalMessageInfo

func (m *CollectionMeta) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *CollectionMeta) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CollectionMeta) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CollectionMeta) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *CollectionMeta) GetPartitionTags() []string {
	if m != nil {
		return m.PartitionTags
	}
	return nil
}

func (m *CollectionMeta) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

func init() {
	proto.RegisterType((*ProxyMeta)(nil), "milvus.proto.etcd.ProxyMeta")
	proto.RegisterType((*IndexInfo)(nil), "milvus.proto.etcd.IndexInfo")
	proto.RegisterType((*FieldIndexInfo)(nil), "milvus.proto.etcd.FieldIndexInfo")
	proto.RegisterType((*CollectionInfo)(nil), "milvus.proto.etcd.CollectionInfo")
	proto.RegisterType((*SegmentIndexInfo)(nil), "milvus.proto.etcd.SegmentIndexInfo")
	proto.RegisterType((*CollectionMeta)(nil), "milvus.proto.etcd.CollectionMeta")
}

func init() { proto.RegisterFile("etcd_meta.proto", fileDescriptor_975d306d62b73e88) }

var fileDescriptor_975d306d62b73e88 = []byte{
	// 730 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x5d, 0x6b, 0xdb, 0x48,
	0x14, 0x45, 0x91, 0x63, 0x47, 0xd7, 0x8a, 0x93, 0xcc, 0x7e, 0x20, 0x42, 0x76, 0x57, 0x31, 0x64,
	0x11, 0x2c, 0x6b, 0xb3, 0xc9, 0xb2, 0x6f, 0x0b, 0xbb, 0xb5, 0x08, 0x98, 0xb6, 0xc1, 0x4c, 0x42,
	0x1f, 0xfa, 0x50, 0x31, 0x96, 0xae, 0xed, 0x01, 0x7d, 0x18, 0xcd, 0x28, 0xc4, 0x6f, 0xfd, 0x31,
	0xfd, 0x6f, 0x7d, 0xe8, 0x7f, 0x28, 0x45, 0x33, 0x92, 0xfc, 0x95, 0xf6, 0xad, 0x6f, 0x3a, 0x67,
	0xee, 0xbd, 0x33, 0xf7, 0xde, 0x73, 0x04, 0x27, 0x28, 0xc3, 0x28, 0x48, 0x50, 0xb2, 0xc1, 0x32,
	0xcf, 0x64, 0x46, 0xce, 0x12, 0x1e, 0x3f, 0x16, 0x42, 0xa3, 0x41, 0x79, 0x7a, 0x6e, 0x87, 0x59,
	0x92, 0x64, 0xa9, 0xa6, 0xce, 0x6d, 0x11, 0x2e, 0x30, 0xa9, 0xc2, 0xfb, 0xef, 0x0d, 0xb0, 0x26,
	0x79, 0xf6, 0xb4, 0x7a, 0x8d, 0x92, 0x91, 0x1e, 0x1c, 0x8c, 0x7d, 0xc7, 0x70, 0x0d, 0xcf, 0xa4,
	0x07, 0x63, 0x9f, 0xfc, 0x03, 0x1d, 0x16, 0x45, 0x39, 0x0a, 0xe1, 0x1c, 0xb8, 0x86, 0xd7, 0xbd,
	0xbe, 0x18, 0x6c, 0x95, 0xaf, 0x0a, 0xff, 0xaf, 0x63, 0x68, 0x1d, 0x4c, 0xfe, 0x80, 0xb3, 0x1c,
	0x45, 0x11, 0xcb, 0x20, 0x5c, 0xb0, 0x34, 0xc5, 0x78, 0xec, 0x0b, 0xc7, 0x74, 0x4d, 0xcf, 0xa2,
	0xa7, 0xfa, 0x60, 0xd4, 0xf0, 0xfd, 0x0f, 0x06, 0x58, 0xe3, 0x34, 0xc2, 0xa7, 0x71, 0x3a, 0xcb,
	0xc8, 0x2f, 0x00, 0xbc, 0x04, 0x41, 0xca, 0x12, 0x54, 0x4f, 0xb1, 0xa8, 0xa5, 0x98, 0x3b, 0x96,
	0x20, 0x71, 0xa0, 0xa3, 0xc0, 0xd8, 0x57, 0x2f, 0x32, 0x69, 0x0d, 0x89, 0x0f, 0xb6, 0x4e, 0x5c,
	0xb2, 0x9c, 0x25, 0xfa, 0xba, 0xee, 0xf5, 0xe5, 0xb3, 0x0f, 0x7e, 0x89, 0xab, 0x37, 0x2c, 0x2e,
	0x70, 0xc2, 0x78, 0x4e, 0xbb, 0x2a, 0x6d, 0xa2, 0xb2, 0xca, 0xfa, 0x11, 0xc6, 0x28, 0x31, 0x72,
	0x5a, 0xae, 0xe1, 0x1d, 0xd1, 0x1a, 0xf6, 0xdf, 0x41, 0xef, 0x96, 0x63, 0x1c, 0xad, 0x9f, 0xea,
	0x40, 0x67, 0xc6, 0x63, 0x8c, 0x9a, 0x91, 0xd5, 0xf0, 0x1b, 0xaf, 0xdc, 0xa8, 0x6f, 0x6e, 0xd7,
	0xff, 0xdc, 0x82, 0xde, 0x28, 0x8b, 0x63, 0x0c, 0x25, 0xcf, 0x52, 0x75, 0xc1, 0xee, 0x3a, 0xfe,
	0x85, 0xb6, 0x5e, 0x5e, 0xb5, 0x8d, 0xab, 0xed, 0xe6, 0xaa, 0xc5, 0xae, 0x8b, 0xdc, 0x2b, 0x82,
	0x56, 0x49, 0xe4, 0x37, 0xe8, 0x86, 0x39, 0x32, 0x89, 0x81, 0xe4, 0x09, 0xaa, 0xfb, 0x5b, 0x14,
	0x34, 0xf5, 0xc0, 0x13, 0x24, 0x7d, 0xb0, 0x97, 0x2c, 0x97, 0x5c, 0x3d, 0xc0, 0x17, 0x4e, 0xcb,
	0x35, 0x3d, 0x93, 0x6e, 0x71, 0xe4, 0x77, 0xe8, 0x35, 0xb8, 0xdc, 0x88, 0x70, 0x0e, 0xd5, 0x5e,
	0x77, 0x58, 0x72, 0x0b, 0xc7, 0xb3, 0x72, 0x5c, 0x81, 0xea, 0x1c, 0x85, 0xd3, 0x7e, 0x6e, 0x1f,
	0xa5, 0x3e, 0x07, 0xdb, 0x63, 0xa5, 0xf6, 0xac, 0xc1, 0x28, 0xc8, 0x35, 0xfc, 0xf4, 0xc8, 0x73,
	0x59, 0xb0, 0xb8, 0xd6, 0x92, 0x52, 0x86, 0x70, 0x3a, 0xea, 0xda, 0x1f, 0xaa, 0xc3, 0x4a, 0x4f,
	0xfa, 0xee, 0xbf, 0xe1, 0xe7, 0xe5, 0x62, 0x25, 0x78, 0xb8, 0x97, 0x74, 0xa4, 0x92, 0x7e, 0xac,
	0x4f, 0xb7, 0xb2, 0xfe, 0x83, 0x8b, 0xa6, 0x87, 0x40, 0x4f, 0x25, 0x52, 0x93, 0x12, 0x92, 0x25,
	0x4b, 0xe1, 0x58, 0xae, 0xe9, 0xb5, 0xe8, 0x79, 0x13, 0x33, 0xd2, 0x21, 0x0f, 0x4d, 0x44, 0xa9,
	0x5d, 0xb1, 0x60, 0x79, 0x24, 0x82, 0xb4, 0x48, 0x1c, 0x70, 0x0d, 0xef, 0x90, 0x5a, 0x9a, 0xb9,
	0x2b, 0x12, 0x32, 0x86, 0x13, 0x21, 0x59, 0x2e, 0x83, 0x65, 0x26, 0x54, 0x05, 0xe1, 0x74, 0xd5,
	0x50, 0xdc, 0xaf, 0x89, 0xd4, 0x67, 0x92, 0x29, 0x8d, 0xf6, 0x54, 0xe2, 0xa4, 0xce, 0x23, 0x14,
	0xce, 0xc2, 0x2c, 0x15, 0x5c, 0x48, 0x4c, 0xc3, 0x55, 0x10, 0xe3, 0x23, 0xc6, 0x8e, 0xed, 0x1a,
	0x5e, 0x6f, 0x57, 0x14, 0x55, 0xb1, 0xd1, 0x3a, 0xfa, 0x55, 0x19, 0x4c, 0x4f, 0xc3, 0x1d, 0xa6,
	0xff, 0xd1, 0x80, 0xd3, 0x7b, 0x9c, 0x27, 0x98, 0xca, 0xb5, 0xc6, 0xfb, 0x60, 0x87, 0x6b, 0x51,
	0xd6, 0x62, 0xdc, 0xe2, 0x88, 0x0b, 0xdd, 0x0d, 0x89, 0x54, 0x8a, 0xdf, 0xa4, 0xc8, 0x05, 0x58,
	0xa2, 0xaa, 0xec, 0x2b, 0xdd, 0x99, 0x74, 0x4d, 0x68, 0x1f, 0x95, 0x2b, 0xf7, 0x95, 0xe7, 0x94,
	0x8f, 0x14, 0xdc, 0xf4, 0xd1, 0xe1, 0x9e, 0x8f, 0xa6, 0x05, 0x57, 0x39, 0x6d, 0x7d, 0x52, 0x41,
	0x72, 0x09, 0x36, 0xa6, 0x6c, 0x1a, 0xa3, 0x56, 0x9e, 0xd3, 0x51, 0x36, 0xeb, 0x6a, 0x4e, 0x35,
	0xd6, 0xff, 0x64, 0x6c, 0x5a, 0xed, 0xd9, 0x3f, 0xdf, 0xf7, 0xb6, 0xda, 0xaf, 0x00, 0xcd, 0x00,
	0x6a, 0xa3, 0x6d, 0x30, 0xe4, 0x6a, 0xc3, 0x66, 0x81, 0x64, 0xf3, 0xda, 0x66, 0xc7, 0x0d, 0xfb,
	0xc0, 0xe6, 0x62, 0xcf, 0xb1, 0xed, 0x7d, 0xc7, 0xbe, 0xb8, 0x79, 0xfb, 0xd7, 0x9c, 0xcb, 0x45,
	0x31, 0x2d, 0xb5, 0x30, 0xd4, 0x6d, 0xfc, 0xc9, 0xb3, 0xea, 0x6b, 0xc8, 0x53, 0x89, 0x79, 0xca,
	0xe2, 0xa1, 0xea, 0x6c, 0x58, 0x3a, 0x72, 0x39, 0x9d, 0xb6, 0x15, 0xba, 0xf9, 0x12, 0x00, 0x00,
	0xff, 0xff, 0xf0, 0x16, 0x8d, 0xf6, 0x60, 0x06, 0x00, 0x00,
}
