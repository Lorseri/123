syntax = "proto3";

package milvus.proto.index;

option go_package = "github.com/milvus-io/milvus/internal/proto/indexpb";

import "common.proto";
import "internal.proto";
import "milvus.proto";
import "data_coord.proto";

service IndexCoord {
  rpc GetComponentStates(internal.GetComponentStatesRequest) returns (internal.ComponentStates) {}
  rpc GetStatisticsChannel(internal.GetStatisticsChannelRequest) returns(milvus.StringResponse){}
  rpc CreateIndex(CreateIndexRequest) returns (common.Status){}
  rpc GetIndexStates(GetIndexStatesRequest) returns (GetIndexStatesResponse) {}
  rpc GetIndexFilePaths(GetIndexFilePathsRequest) returns (GetIndexFilePathsResponse){}
  rpc DropIndex(DropIndexRequest) returns (common.Status) {}
  rpc DescribeIndex(DescribeIndexRequest) returns (DescribeIndexResponse) {}
//  rpc RemoveIndex(RemoveIndexRequest) returns (common.Status) {}

  // https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
  rpc GetMetrics(milvus.GetMetricsRequest) returns (milvus.GetMetricsResponse) {}
}

//service IndexNode {
//  rpc GetComponentStates(internal.GetComponentStatesRequest) returns (internal.ComponentStates) {}
//  rpc BuildIndex(BuildIndexRequest) returns (common.Status){}
//  rpc GetTaskSlots(GetTaskSlotsRequest) returns (GetTaskSlotsResponse){}
//
//  // https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
//  rpc GetMetrics(milvus.GetMetricsRequest) returns (milvus.GetMetricsResponse) {}
//}

service IndexNode {
    rpc CreateJob(CreateJobRequest) returns (common.Status) {}
    rpc QueryJobs(QueryJobsRequest) returns (QueryJobsResponse) {}
    rpc DropJobs(DropJobsRequest) returns (common.Status) {}
    rpc GetJobNum(GetJobNumRequest) returns (GetJobNumResponse) {}
}

message IndexInfo {
  int64 collectionID = 1;
  int64 fieldID = 2;
  string index_name = 3;
  repeated common.KeyValuePair type_params = 4;
  repeated common.KeyValuePair index_params = 5;
}

message FieldIndex {
  IndexInfo index_info = 1;
  int64 indexID = 2;
  bool deleted = 8;
  uint64 create_time = 9;
}

message SegmentIndex {
    int64 collectionID = 1;
    int64 partitionID = 2;
    int64 segmentID = 3;
    int64 num_rows = 4;
    int64 indexID = 5;
    int64 buildID = 6;
    int64 nodeID = 7;
    int64 index_version = 8;
    common.IndexState state = 9;
    string fail_reason = 10;
    repeated string index_files_paths = 11;
    bool deleted = 12;
    uint64 create_time = 13;
    uint64 serialize_size = 14;
}

message HandoffTask {
  data.SegmentInfo segment_info = 1;
  IndexInfo index_info = 2;
}

message RegisterNodeRequest {
  common.MsgBase base = 1;
  common.Address address = 2;
  int64 nodeID = 3;
}

message RegisterNodeResponse {
  common.Status status = 1;
  internal.InitParams init_params = 2;
}

message GetIndexStatesRequest {
  int64 collectionID = 1;
  int64 fieldID = 2;
  string index_name = 3;
}

message GetIndexStatesResponse {
  common.Status status = 1;
  common.IndexState state = 2;
  string fail_reason = 3;
}

message CreateIndexRequest {
  int64 collectionID = 1;
  int64 fieldID = 2;
  string index_name = 3;
  repeated common.KeyValuePair type_params = 4;
  repeated common.KeyValuePair index_params = 5;
}

message GetIndexFilePathsRequest {
  int64 collectionID = 1;
  int64 fieldID = 2;
  repeated int64 segmentIDs = 3;
  string index_name = 4;
}

message IndexFilePathInfo {
  common.Status status = 1;
  int64 segmentID = 2;
  repeated string index_file_paths = 3;
  uint64 serialized_size = 4;
}

message GetIndexFilePathsResponse {
  common.Status status = 1;
  repeated IndexFilePathInfo file_paths = 2;
}

message DropIndexRequest {
  int64 collectionID = 1;
  int64 fieldID = 2;
  string index_name = 3;
}

message DescribeIndexRequest {
  int64 collectionID = 1;
}

message DescribeIndexResponse {
  int64 collectionID = 1;
  repeated IndexInfo index_infos = 2;
}

message BuildIndexRequest {
  int64 clusterID = 1;
  int64 indexBuildID = 2;
  int64 index_version = 3;
  repeated string data_paths = 4;
  repeated common.KeyValuePair type_params = 5;
  repeated common.KeyValuePair index_params = 6;
}

message GetTaskSlotsRequest {

}

message GetTaskSlotsResponse {
  common.Status status = 1;
  int64 slots = 2;
}

message CreateJobRequest {
  int64 clusterID = 1;
  string storage_access_key = 2;
  string bucket_name = 3;
  string storage_prefix = 4;
  int64 buildID = 5;
  repeated string data_paths = 6;
  int64 index_version = 7;
  repeated common.KeyValuePair index_params = 8;
  repeated common.KeyValuePair type_params = 9;
}

message QueryJobsRequest {
  int64 clusterID = 1;
  repeated int64 buildIDs = 2;
}

message IndexStateInfo {
  int64 buildID = 1;
  common.IndexState state = 2;
  repeated string index_files = 3;
}

message QueryJobsResponse {
  common.Status status = 1;
  int64 clusterID = 2;
  repeated IndexStateInfo index_infos = 3;
}

message DropJobsRequest {
  int64 clusterID = 1;
  repeated int64 buildIDs = 2;
}

message GetJobNumRequest {

}

message JobInfo {
  int64 num_rows = 1;
  int64 dim = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  repeated common.KeyValuePair index_params = 5;
  int64 podID = 6;
}

message GetJobNumResponse {
  common.Status status = 1;
  int64 total_job_num = 2;
  int64 in_progress_job_num = 3;
  int64 enqueue_job_num = 4;
  int64 task_slots = 5;
  repeated JobInfo job_infos = 6;
}
