// Code generated by protoc-gen-go. DO NOT EDIT.
// source: index_service.proto

package indexpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	commonpb "github.com/milvus-io/milvus/internal/proto/commonpb"
	internalpb "github.com/milvus-io/milvus/internal/proto/internalpb"
	milvuspb "github.com/milvus-io/milvus/internal/proto/milvuspb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterNodeRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Address              *commonpb.Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RegisterNodeRequest) Reset()         { *m = RegisterNodeRequest{} }
func (m *RegisterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeRequest) ProtoMessage()    {}
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{0}
}

func (m *RegisterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeRequest.Unmarshal(m, b)
}
func (m *RegisterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeRequest.Marshal(b, m, deterministic)
}
func (m *RegisterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeRequest.Merge(m, src)
}
func (m *RegisterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeRequest.Size(m)
}
func (m *RegisterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeRequest proto.InternalMessageInfo

func (m *RegisterNodeRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *RegisterNodeRequest) GetAddress() *commonpb.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type RegisterNodeResponse struct {
	Status               *commonpb.Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	InitParams           *internalpb.InitParams `protobuf:"bytes,2,opt,name=init_params,json=initParams,proto3" json:"init_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RegisterNodeResponse) Reset()         { *m = RegisterNodeResponse{} }
func (m *RegisterNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeResponse) ProtoMessage()    {}
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{1}
}

func (m *RegisterNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeResponse.Unmarshal(m, b)
}
func (m *RegisterNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeResponse.Marshal(b, m, deterministic)
}
func (m *RegisterNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeResponse.Merge(m, src)
}
func (m *RegisterNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeResponse.Size(m)
}
func (m *RegisterNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeResponse proto.InternalMessageInfo

func (m *RegisterNodeResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RegisterNodeResponse) GetInitParams() *internalpb.InitParams {
	if m != nil {
		return m.InitParams
	}
	return nil
}

type GetIndexStatesRequest struct {
	IndexBuildIDs        []int64  `protobuf:"varint,1,rep,packed,name=indexBuildIDs,proto3" json:"indexBuildIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIndexStatesRequest) Reset()         { *m = GetIndexStatesRequest{} }
func (m *GetIndexStatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetIndexStatesRequest) ProtoMessage()    {}
func (*GetIndexStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{2}
}

func (m *GetIndexStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexStatesRequest.Unmarshal(m, b)
}
func (m *GetIndexStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexStatesRequest.Marshal(b, m, deterministic)
}
func (m *GetIndexStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexStatesRequest.Merge(m, src)
}
func (m *GetIndexStatesRequest) XXX_Size() int {
	return xxx_messageInfo_GetIndexStatesRequest.Size(m)
}
func (m *GetIndexStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexStatesRequest proto.InternalMessageInfo

func (m *GetIndexStatesRequest) GetIndexBuildIDs() []int64 {
	if m != nil {
		return m.IndexBuildIDs
	}
	return nil
}

type IndexInfo struct {
	State                commonpb.IndexState `protobuf:"varint,1,opt,name=state,proto3,enum=milvus.proto.common.IndexState" json:"state,omitempty"`
	IndexBuildID         int64               `protobuf:"varint,2,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	IndexID              int64               `protobuf:"varint,3,opt,name=indexID,proto3" json:"indexID,omitempty"`
	IndexName            string              `protobuf:"bytes,4,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Reason               string              `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IndexInfo) Reset()         { *m = IndexInfo{} }
func (m *IndexInfo) String() string { return proto.CompactTextString(m) }
func (*IndexInfo) ProtoMessage()    {}
func (*IndexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{3}
}

func (m *IndexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexInfo.Unmarshal(m, b)
}
func (m *IndexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexInfo.Marshal(b, m, deterministic)
}
func (m *IndexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexInfo.Merge(m, src)
}
func (m *IndexInfo) XXX_Size() int {
	return xxx_messageInfo_IndexInfo.Size(m)
}
func (m *IndexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IndexInfo proto.InternalMessageInfo

func (m *IndexInfo) GetState() commonpb.IndexState {
	if m != nil {
		return m.State
	}
	return commonpb.IndexState_IndexStateNone
}

func (m *IndexInfo) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *IndexInfo) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *IndexInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *IndexInfo) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type GetIndexStatesResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	States               []*IndexInfo     `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetIndexStatesResponse) Reset()         { *m = GetIndexStatesResponse{} }
func (m *GetIndexStatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetIndexStatesResponse) ProtoMessage()    {}
func (*GetIndexStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{4}
}

func (m *GetIndexStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexStatesResponse.Unmarshal(m, b)
}
func (m *GetIndexStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexStatesResponse.Marshal(b, m, deterministic)
}
func (m *GetIndexStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexStatesResponse.Merge(m, src)
}
func (m *GetIndexStatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetIndexStatesResponse.Size(m)
}
func (m *GetIndexStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexStatesResponse proto.InternalMessageInfo

func (m *GetIndexStatesResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetIndexStatesResponse) GetStates() []*IndexInfo {
	if m != nil {
		return m.States
	}
	return nil
}

type CreateIndexRequest struct {
	IndexBuildID         int64                    `protobuf:"varint,1,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	IndexName            string                   `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexID              int64                    `protobuf:"varint,3,opt,name=indexID,proto3" json:"indexID,omitempty"`
	Version              int64                    `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	MetaPath             string                   `protobuf:"bytes,5,opt,name=meta_path,json=metaPath,proto3" json:"meta_path,omitempty"`
	DataPaths            []string                 `protobuf:"bytes,6,rep,name=data_paths,json=dataPaths,proto3" json:"data_paths,omitempty"`
	TypeParams           []*commonpb.KeyValuePair `protobuf:"bytes,7,rep,name=type_params,json=typeParams,proto3" json:"type_params,omitempty"`
	IndexParams          []*commonpb.KeyValuePair `protobuf:"bytes,8,rep,name=index_params,json=indexParams,proto3" json:"index_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CreateIndexRequest) Reset()         { *m = CreateIndexRequest{} }
func (m *CreateIndexRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIndexRequest) ProtoMessage()    {}
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{5}
}

func (m *CreateIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIndexRequest.Unmarshal(m, b)
}
func (m *CreateIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIndexRequest.Marshal(b, m, deterministic)
}
func (m *CreateIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIndexRequest.Merge(m, src)
}
func (m *CreateIndexRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIndexRequest.Size(m)
}
func (m *CreateIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIndexRequest proto.InternalMessageInfo

func (m *CreateIndexRequest) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *CreateIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *CreateIndexRequest) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *CreateIndexRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CreateIndexRequest) GetMetaPath() string {
	if m != nil {
		return m.MetaPath
	}
	return ""
}

func (m *CreateIndexRequest) GetDataPaths() []string {
	if m != nil {
		return m.DataPaths
	}
	return nil
}

func (m *CreateIndexRequest) GetTypeParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.TypeParams
	}
	return nil
}

func (m *CreateIndexRequest) GetIndexParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.IndexParams
	}
	return nil
}

type BuildIndexRequest struct {
	IndexBuildID         int64                    `protobuf:"varint,1,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	IndexName            string                   `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexID              int64                    `protobuf:"varint,3,opt,name=indexID,proto3" json:"indexID,omitempty"`
	DataPaths            []string                 `protobuf:"bytes,5,rep,name=data_paths,json=dataPaths,proto3" json:"data_paths,omitempty"`
	TypeParams           []*commonpb.KeyValuePair `protobuf:"bytes,6,rep,name=type_params,json=typeParams,proto3" json:"type_params,omitempty"`
	IndexParams          []*commonpb.KeyValuePair `protobuf:"bytes,7,rep,name=index_params,json=indexParams,proto3" json:"index_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BuildIndexRequest) Reset()         { *m = BuildIndexRequest{} }
func (m *BuildIndexRequest) String() string { return proto.CompactTextString(m) }
func (*BuildIndexRequest) ProtoMessage()    {}
func (*BuildIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{6}
}

func (m *BuildIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildIndexRequest.Unmarshal(m, b)
}
func (m *BuildIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildIndexRequest.Marshal(b, m, deterministic)
}
func (m *BuildIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildIndexRequest.Merge(m, src)
}
func (m *BuildIndexRequest) XXX_Size() int {
	return xxx_messageInfo_BuildIndexRequest.Size(m)
}
func (m *BuildIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildIndexRequest proto.InternalMessageInfo

func (m *BuildIndexRequest) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *BuildIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *BuildIndexRequest) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func (m *BuildIndexRequest) GetDataPaths() []string {
	if m != nil {
		return m.DataPaths
	}
	return nil
}

func (m *BuildIndexRequest) GetTypeParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.TypeParams
	}
	return nil
}

func (m *BuildIndexRequest) GetIndexParams() []*commonpb.KeyValuePair {
	if m != nil {
		return m.IndexParams
	}
	return nil
}

type BuildIndexResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IndexBuildID         int64            `protobuf:"varint,2,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BuildIndexResponse) Reset()         { *m = BuildIndexResponse{} }
func (m *BuildIndexResponse) String() string { return proto.CompactTextString(m) }
func (*BuildIndexResponse) ProtoMessage()    {}
func (*BuildIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{7}
}

func (m *BuildIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildIndexResponse.Unmarshal(m, b)
}
func (m *BuildIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildIndexResponse.Marshal(b, m, deterministic)
}
func (m *BuildIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildIndexResponse.Merge(m, src)
}
func (m *BuildIndexResponse) XXX_Size() int {
	return xxx_messageInfo_BuildIndexResponse.Size(m)
}
func (m *BuildIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildIndexResponse proto.InternalMessageInfo

func (m *BuildIndexResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BuildIndexResponse) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

type NotifyBuildIndexRequest struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IndexBuildID         int64            `protobuf:"varint,2,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	IndexFilePaths       []string         `protobuf:"bytes,3,rep,name=index_file_paths,json=indexFilePaths,proto3" json:"index_file_paths,omitempty"`
	NodeID               int64            `protobuf:"varint,4,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NotifyBuildIndexRequest) Reset()         { *m = NotifyBuildIndexRequest{} }
func (m *NotifyBuildIndexRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyBuildIndexRequest) ProtoMessage()    {}
func (*NotifyBuildIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{8}
}

func (m *NotifyBuildIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyBuildIndexRequest.Unmarshal(m, b)
}
func (m *NotifyBuildIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyBuildIndexRequest.Marshal(b, m, deterministic)
}
func (m *NotifyBuildIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyBuildIndexRequest.Merge(m, src)
}
func (m *NotifyBuildIndexRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyBuildIndexRequest.Size(m)
}
func (m *NotifyBuildIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyBuildIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyBuildIndexRequest proto.InternalMessageInfo

func (m *NotifyBuildIndexRequest) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *NotifyBuildIndexRequest) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *NotifyBuildIndexRequest) GetIndexFilePaths() []string {
	if m != nil {
		return m.IndexFilePaths
	}
	return nil
}

func (m *NotifyBuildIndexRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type GetIndexFilePathsRequest struct {
	IndexBuildIDs        []int64  `protobuf:"varint,1,rep,packed,name=indexBuildIDs,proto3" json:"indexBuildIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIndexFilePathsRequest) Reset()         { *m = GetIndexFilePathsRequest{} }
func (m *GetIndexFilePathsRequest) String() string { return proto.CompactTextString(m) }
func (*GetIndexFilePathsRequest) ProtoMessage()    {}
func (*GetIndexFilePathsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{9}
}

func (m *GetIndexFilePathsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexFilePathsRequest.Unmarshal(m, b)
}
func (m *GetIndexFilePathsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexFilePathsRequest.Marshal(b, m, deterministic)
}
func (m *GetIndexFilePathsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexFilePathsRequest.Merge(m, src)
}
func (m *GetIndexFilePathsRequest) XXX_Size() int {
	return xxx_messageInfo_GetIndexFilePathsRequest.Size(m)
}
func (m *GetIndexFilePathsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexFilePathsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexFilePathsRequest proto.InternalMessageInfo

func (m *GetIndexFilePathsRequest) GetIndexBuildIDs() []int64 {
	if m != nil {
		return m.IndexBuildIDs
	}
	return nil
}

type IndexFilePathInfo struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IndexBuildID         int64            `protobuf:"varint,2,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	IndexFilePaths       []string         `protobuf:"bytes,3,rep,name=index_file_paths,json=indexFilePaths,proto3" json:"index_file_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IndexFilePathInfo) Reset()         { *m = IndexFilePathInfo{} }
func (m *IndexFilePathInfo) String() string { return proto.CompactTextString(m) }
func (*IndexFilePathInfo) ProtoMessage()    {}
func (*IndexFilePathInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{10}
}

func (m *IndexFilePathInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexFilePathInfo.Unmarshal(m, b)
}
func (m *IndexFilePathInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexFilePathInfo.Marshal(b, m, deterministic)
}
func (m *IndexFilePathInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexFilePathInfo.Merge(m, src)
}
func (m *IndexFilePathInfo) XXX_Size() int {
	return xxx_messageInfo_IndexFilePathInfo.Size(m)
}
func (m *IndexFilePathInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexFilePathInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IndexFilePathInfo proto.InternalMessageInfo

func (m *IndexFilePathInfo) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *IndexFilePathInfo) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *IndexFilePathInfo) GetIndexFilePaths() []string {
	if m != nil {
		return m.IndexFilePaths
	}
	return nil
}

type GetIndexFilePathsResponse struct {
	Status               *commonpb.Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	FilePaths            []*IndexFilePathInfo `protobuf:"bytes,2,rep,name=file_paths,json=filePaths,proto3" json:"file_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetIndexFilePathsResponse) Reset()         { *m = GetIndexFilePathsResponse{} }
func (m *GetIndexFilePathsResponse) String() string { return proto.CompactTextString(m) }
func (*GetIndexFilePathsResponse) ProtoMessage()    {}
func (*GetIndexFilePathsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{11}
}

func (m *GetIndexFilePathsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexFilePathsResponse.Unmarshal(m, b)
}
func (m *GetIndexFilePathsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexFilePathsResponse.Marshal(b, m, deterministic)
}
func (m *GetIndexFilePathsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexFilePathsResponse.Merge(m, src)
}
func (m *GetIndexFilePathsResponse) XXX_Size() int {
	return xxx_messageInfo_GetIndexFilePathsResponse.Size(m)
}
func (m *GetIndexFilePathsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexFilePathsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexFilePathsResponse proto.InternalMessageInfo

func (m *GetIndexFilePathsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetIndexFilePathsResponse) GetFilePaths() []*IndexFilePathInfo {
	if m != nil {
		return m.FilePaths
	}
	return nil
}

type IndexMeta struct {
	IndexBuildID         int64               `protobuf:"varint,1,opt,name=indexBuildID,proto3" json:"indexBuildID,omitempty"`
	State                commonpb.IndexState `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.proto.common.IndexState" json:"state,omitempty"`
	FailReason           string              `protobuf:"bytes,3,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason,omitempty"`
	Req                  *BuildIndexRequest  `protobuf:"bytes,4,opt,name=req,proto3" json:"req,omitempty"`
	IndexFilePaths       []string            `protobuf:"bytes,5,rep,name=index_file_paths,json=indexFilePaths,proto3" json:"index_file_paths,omitempty"`
	MarkDeleted          bool                `protobuf:"varint,6,opt,name=mark_deleted,json=markDeleted,proto3" json:"mark_deleted,omitempty"`
	LeaseKey             string              `protobuf:"bytes,7,opt,name=lease_key,json=leaseKey,proto3" json:"lease_key,omitempty"`
	Version              int64               `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IndexMeta) Reset()         { *m = IndexMeta{} }
func (m *IndexMeta) String() string { return proto.CompactTextString(m) }
func (*IndexMeta) ProtoMessage()    {}
func (*IndexMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{12}
}

func (m *IndexMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexMeta.Unmarshal(m, b)
}
func (m *IndexMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexMeta.Marshal(b, m, deterministic)
}
func (m *IndexMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexMeta.Merge(m, src)
}
func (m *IndexMeta) XXX_Size() int {
	return xxx_messageInfo_IndexMeta.Size(m)
}
func (m *IndexMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexMeta.DiscardUnknown(m)
}

var xxx_messageInfo_IndexMeta proto.InternalMessageInfo

func (m *IndexMeta) GetIndexBuildID() int64 {
	if m != nil {
		return m.IndexBuildID
	}
	return 0
}

func (m *IndexMeta) GetState() commonpb.IndexState {
	if m != nil {
		return m.State
	}
	return commonpb.IndexState_IndexStateNone
}

func (m *IndexMeta) GetFailReason() string {
	if m != nil {
		return m.FailReason
	}
	return ""
}

func (m *IndexMeta) GetReq() *BuildIndexRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *IndexMeta) GetIndexFilePaths() []string {
	if m != nil {
		return m.IndexFilePaths
	}
	return nil
}

func (m *IndexMeta) GetMarkDeleted() bool {
	if m != nil {
		return m.MarkDeleted
	}
	return false
}

func (m *IndexMeta) GetLeaseKey() string {
	if m != nil {
		return m.LeaseKey
	}
	return ""
}

func (m *IndexMeta) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type DropIndexRequest struct {
	IndexID              int64    `protobuf:"varint,1,opt,name=indexID,proto3" json:"indexID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropIndexRequest) Reset()         { *m = DropIndexRequest{} }
func (m *DropIndexRequest) String() string { return proto.CompactTextString(m) }
func (*DropIndexRequest) ProtoMessage()    {}
func (*DropIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5d2036b4df73e0a, []int{13}
}

func (m *DropIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropIndexRequest.Unmarshal(m, b)
}
func (m *DropIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropIndexRequest.Marshal(b, m, deterministic)
}
func (m *DropIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropIndexRequest.Merge(m, src)
}
func (m *DropIndexRequest) XXX_Size() int {
	return xxx_messageInfo_DropIndexRequest.Size(m)
}
func (m *DropIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DropIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DropIndexRequest proto.InternalMessageInfo

func (m *DropIndexRequest) GetIndexID() int64 {
	if m != nil {
		return m.IndexID
	}
	return 0
}

func init() {
	proto.RegisterType((*RegisterNodeRequest)(nil), "milvus.proto.index.RegisterNodeRequest")
	proto.RegisterType((*RegisterNodeResponse)(nil), "milvus.proto.index.RegisterNodeResponse")
	proto.RegisterType((*GetIndexStatesRequest)(nil), "milvus.proto.index.GetIndexStatesRequest")
	proto.RegisterType((*IndexInfo)(nil), "milvus.proto.index.IndexInfo")
	proto.RegisterType((*GetIndexStatesResponse)(nil), "milvus.proto.index.GetIndexStatesResponse")
	proto.RegisterType((*CreateIndexRequest)(nil), "milvus.proto.index.CreateIndexRequest")
	proto.RegisterType((*BuildIndexRequest)(nil), "milvus.proto.index.BuildIndexRequest")
	proto.RegisterType((*BuildIndexResponse)(nil), "milvus.proto.index.BuildIndexResponse")
	proto.RegisterType((*NotifyBuildIndexRequest)(nil), "milvus.proto.index.NotifyBuildIndexRequest")
	proto.RegisterType((*GetIndexFilePathsRequest)(nil), "milvus.proto.index.GetIndexFilePathsRequest")
	proto.RegisterType((*IndexFilePathInfo)(nil), "milvus.proto.index.IndexFilePathInfo")
	proto.RegisterType((*GetIndexFilePathsResponse)(nil), "milvus.proto.index.GetIndexFilePathsResponse")
	proto.RegisterType((*IndexMeta)(nil), "milvus.proto.index.IndexMeta")
	proto.RegisterType((*DropIndexRequest)(nil), "milvus.proto.index.DropIndexRequest")
}

func init() { proto.RegisterFile("index_service.proto", fileDescriptor_a5d2036b4df73e0a) }

var fileDescriptor_a5d2036b4df73e0a = []byte{
	// 1002 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xcf, 0xf9, 0x12, 0x3b, 0x1e, 0x9b, 0x28, 0xd9, 0x96, 0x70, 0xb8, 0x54, 0x4d, 0x8e, 0x02,
	0x06, 0x5a, 0xa7, 0x72, 0x29, 0x3c, 0x21, 0x41, 0x62, 0x11, 0x59, 0x55, 0xa3, 0xe8, 0x1a, 0xf1,
	0x80, 0x04, 0xd6, 0xc6, 0x1e, 0x27, 0xab, 0xdc, 0xbf, 0xdc, 0xae, 0x23, 0xfc, 0xc4, 0x0b, 0x12,
	0x8f, 0xbc, 0x21, 0xf1, 0x3d, 0x90, 0xfa, 0x05, 0xf8, 0x02, 0x7c, 0x23, 0x74, 0xbb, 0x7b, 0xd7,
	0xbb, 0xf3, 0x39, 0x71, 0x48, 0x09, 0x2f, 0xbc, 0xdd, 0xce, 0xfd, 0x66, 0x7e, 0x3b, 0xbf, 0x9d,
	0x99, 0x5d, 0xb8, 0xc3, 0xfc, 0x11, 0xfe, 0x38, 0xe0, 0x18, 0x5d, 0xb0, 0x21, 0x76, 0xc2, 0x28,
	0x10, 0x01, 0x21, 0x1e, 0x73, 0x2f, 0x26, 0x5c, 0xad, 0x3a, 0x12, 0xd1, 0x6a, 0x0e, 0x03, 0xcf,
	0x0b, 0x7c, 0x65, 0x6b, 0xad, 0x31, 0x5f, 0x60, 0xe4, 0x53, 0x57, 0xaf, 0x9b, 0x59, 0x0f, 0xfb,
	0x27, 0xb8, 0xe3, 0xe0, 0x09, 0xe3, 0x02, 0xa3, 0x83, 0x60, 0x84, 0x0e, 0x9e, 0x4f, 0x90, 0x0b,
	0xf2, 0x04, 0x96, 0x8f, 0x29, 0x47, 0xcb, 0xd8, 0x32, 0xda, 0x8d, 0xee, 0x7b, 0x9d, 0x1c, 0x8b,
	0x0e, 0xff, 0x82, 0x9f, 0xec, 0x52, 0x8e, 0x8e, 0x44, 0x92, 0xcf, 0xa1, 0x46, 0x47, 0xa3, 0x08,
	0x39, 0xb7, 0x2a, 0x97, 0x38, 0x7d, 0xad, 0x30, 0x4e, 0x02, 0xb6, 0x7f, 0x35, 0xe0, 0x6e, 0x7e,
	0x07, 0x3c, 0x0c, 0x7c, 0x8e, 0xe4, 0x29, 0x54, 0xb9, 0xa0, 0x62, 0xc2, 0xf5, 0x26, 0xee, 0x95,
	0xc6, 0x7b, 0x29, 0x21, 0x8e, 0x86, 0x92, 0x5d, 0x68, 0x30, 0x9f, 0x89, 0x41, 0x48, 0x23, 0xea,
	0x25, 0x3b, 0xd9, 0xee, 0x14, 0x44, 0xd2, 0x7a, 0xf4, 0x7d, 0x26, 0x0e, 0x25, 0xd0, 0x01, 0x96,
	0x7e, 0xdb, 0x5f, 0xc2, 0xdb, 0xfb, 0x28, 0xfa, 0xb1, 0x94, 0x71, 0x74, 0xe4, 0x89, 0x28, 0x0f,
	0xe1, 0x2d, 0x29, 0xf0, 0xee, 0x84, 0xb9, 0xa3, 0x7e, 0x2f, 0xde, 0x98, 0xd9, 0x36, 0x9d, 0xbc,
	0xd1, 0x7e, 0x65, 0x40, 0x5d, 0x3a, 0xf7, 0xfd, 0x71, 0x40, 0x9e, 0xc1, 0x4a, 0xbc, 0x35, 0xa5,
	0xe4, 0x5a, 0xf7, 0x41, 0x69, 0x12, 0xaf, 0xb9, 0x1c, 0x85, 0x26, 0x36, 0x34, 0xb3, 0x51, 0x65,
	0x22, 0xa6, 0x93, 0xb3, 0x11, 0x0b, 0x6a, 0x72, 0xdd, 0xef, 0x59, 0xa6, 0xfc, 0x9d, 0x2c, 0xc9,
	0x7d, 0x00, 0x55, 0x2b, 0x3e, 0xf5, 0xd0, 0x5a, 0xde, 0x32, 0xda, 0x75, 0xa7, 0x2e, 0x2d, 0x07,
	0xd4, 0x43, 0xb2, 0x09, 0xd5, 0x08, 0x29, 0x0f, 0x7c, 0x6b, 0x45, 0xfe, 0xd2, 0x2b, 0xfb, 0x67,
	0x03, 0x36, 0x8b, 0x99, 0xdf, 0xe4, 0x30, 0x9e, 0x29, 0x27, 0x8c, 0xcf, 0xc1, 0x6c, 0x37, 0xba,
	0xf7, 0x3b, 0xb3, 0xc5, 0xda, 0x49, 0xa5, 0x72, 0x34, 0xd8, 0xfe, 0xab, 0x02, 0x64, 0x2f, 0x42,
	0x2a, 0x50, 0xfe, 0x4b, 0xd4, 0x2f, 0x4a, 0x62, 0x94, 0x48, 0x92, 0x4f, 0xbc, 0x52, 0x4c, 0x7c,
	0xbe, 0x62, 0x16, 0xd4, 0x2e, 0x30, 0xe2, 0x2c, 0xf0, 0xa5, 0x5c, 0xa6, 0x93, 0x2c, 0xc9, 0x3d,
	0xa8, 0x7b, 0x28, 0xe8, 0x20, 0xa4, 0xe2, 0x54, 0xeb, 0xb5, 0x1a, 0x1b, 0x0e, 0xa9, 0x38, 0x8d,
	0xf9, 0x46, 0x54, 0xff, 0xe4, 0x56, 0x75, 0xcb, 0x8c, 0xf9, 0x62, 0x4b, 0xfc, 0x57, 0x56, 0xa3,
	0x98, 0x86, 0x98, 0x54, 0x63, 0x4d, 0xaa, 0xb0, 0x5d, 0x2a, 0xdd, 0x73, 0x9c, 0x7e, 0x4b, 0xdd,
	0x09, 0x1e, 0x52, 0x16, 0x39, 0x10, 0x7b, 0xa9, 0x6a, 0x24, 0x3d, 0x9d, 0x76, 0x12, 0x64, 0x75,
	0xd1, 0x20, 0x0d, 0xe9, 0xa6, 0x6b, 0xfa, 0xf7, 0x0a, 0x6c, 0x28, 0x91, 0x6e, 0x4d, 0xd2, 0xbc,
	0x36, 0x2b, 0x57, 0x68, 0x53, 0x7d, 0x13, 0xda, 0xd4, 0xfe, 0x91, 0x36, 0x1e, 0x90, 0xac, 0x34,
	0x37, 0xa9, 0xf8, 0x05, 0xda, 0xd6, 0xfe, 0xc3, 0x80, 0x77, 0x0e, 0x02, 0xc1, 0xc6, 0xd3, 0xd9,
	0x03, 0xf9, 0xb7, 0x48, 0x49, 0x1b, 0xd6, 0x95, 0x52, 0x63, 0xe6, 0xa2, 0x3e, 0x12, 0x53, 0x1e,
	0xc9, 0x9a, 0xb4, 0x7f, 0xc3, 0x5c, 0x54, 0xe7, 0xb2, 0x09, 0x55, 0x3f, 0x18, 0x61, 0xbf, 0xa7,
	0x1b, 0x41, 0xaf, 0xec, 0xaf, 0xc0, 0x4a, 0x66, 0x43, 0x0a, 0xbe, 0xde, 0x60, 0xfc, 0xcd, 0x80,
	0x8d, 0x9c, 0xbf, 0x1c, 0x90, 0xff, 0x7d, 0xca, 0xf1, 0xc6, 0xde, 0x2d, 0xc9, 0xed, 0x26, 0x85,
	0xd0, 0x03, 0xc8, 0xd0, 0xaa, 0xf1, 0xf7, 0xc1, 0xdc, 0xf1, 0x97, 0x15, 0xc4, 0xa9, 0x8f, 0xd3,
	0x8d, 0xfd, 0x59, 0xd1, 0x57, 0xc9, 0x0b, 0x14, 0x74, 0xa1, 0x6e, 0x4d, 0xaf, 0x9b, 0xca, 0xb5,
	0xae, 0x9b, 0x07, 0xd0, 0x18, 0x53, 0xe6, 0x0e, 0xf4, 0xb5, 0x60, 0xca, 0x2e, 0x87, 0xd8, 0xe4,
	0x48, 0x0b, 0xf9, 0x02, 0xcc, 0x08, 0xcf, 0x65, 0x49, 0xcc, 0x49, 0x64, 0xa6, 0x98, 0x9d, 0xd8,
	0xa3, 0xf4, 0x14, 0x56, 0x4a, 0x0b, 0x6f, 0x1b, 0x9a, 0x1e, 0x8d, 0xce, 0x06, 0x23, 0x74, 0x51,
	0xe0, 0xc8, 0xaa, 0x6e, 0x19, 0xed, 0x55, 0xa7, 0x11, 0xdb, 0x7a, 0xca, 0x14, 0xcf, 0x62, 0x17,
	0x29, 0xc7, 0xc1, 0x19, 0x4e, 0xad, 0x9a, 0x9a, 0xc5, 0xd2, 0xf0, 0x1c, 0xa7, 0xd9, 0x11, 0xbe,
	0x9a, 0x1b, 0xe1, 0xf6, 0x23, 0x58, 0xef, 0x45, 0x41, 0x98, 0xeb, 0xb4, 0xcc, 0xdc, 0x32, 0x72,
	0x73, 0xab, 0xfb, 0xaa, 0x06, 0x4d, 0xa5, 0x90, 0x7a, 0x68, 0x91, 0x10, 0xc8, 0x3e, 0x8a, 0xbd,
	0xc0, 0x0b, 0x03, 0x1f, 0x7d, 0xa1, 0x6e, 0x46, 0xf2, 0x64, 0xce, 0xa3, 0x62, 0x16, 0xaa, 0x29,
	0x5b, 0x1f, 0xce, 0xf1, 0x28, 0xc0, 0xed, 0x25, 0xe2, 0x49, 0xc6, 0x23, 0xe6, 0xe1, 0x11, 0x1b,
	0x9e, 0xed, 0x9d, 0x52, 0xdf, 0x47, 0xf7, 0x32, 0xc6, 0x02, 0x34, 0x61, 0x7c, 0x3f, 0xef, 0xa1,
	0x17, 0x2f, 0x45, 0xc4, 0xfc, 0x93, 0xa4, 0xbe, 0xed, 0x25, 0x72, 0x0e, 0x77, 0xf7, 0x51, 0xb2,
	0x33, 0x2e, 0xd8, 0x90, 0x27, 0x84, 0xdd, 0xf9, 0x84, 0x33, 0xe0, 0x6b, 0x52, 0x0e, 0xa1, 0x99,
	0x7d, 0xf4, 0x91, 0x8f, 0xca, 0x4a, 0xaa, 0xe4, 0x61, 0xda, 0x6a, 0x5f, 0x0d, 0x4c, 0x49, 0xbe,
	0x07, 0x78, 0x5d, 0x95, 0x64, 0xb1, 0xaa, 0x9d, 0x3d, 0xa5, 0x22, 0x2c, 0x0d, 0xcf, 0x60, 0x2d,
	0xff, 0x5a, 0x22, 0x1f, 0x97, 0xf9, 0x96, 0xbe, 0x25, 0x5b, 0x9f, 0x2c, 0x02, 0x4d, 0xa9, 0x22,
	0xd8, 0x98, 0x19, 0x50, 0xe4, 0xd1, 0x65, 0x21, 0x8a, 0x33, 0xba, 0xf5, 0x78, 0x41, 0x74, 0xca,
	0xf9, 0x03, 0xac, 0x17, 0xaf, 0x29, 0xf2, 0x69, 0x59, 0x90, 0x39, 0x97, 0x59, 0xeb, 0xb2, 0x41,
	0x69, 0x2f, 0x91, 0x43, 0xa8, 0xa7, 0x5d, 0x49, 0x1e, 0x96, 0x05, 0x2e, 0x36, 0xed, 0x15, 0x11,
	0xbb, 0xbf, 0x2c, 0xeb, 0x71, 0x29, 0x4b, 0xea, 0xff, 0xb6, 0x7d, 0xf3, 0x6d, 0x7b, 0x04, 0x8d,
	0xcc, 0xcb, 0x9c, 0x94, 0xf6, 0xca, 0xec, 0xd3, 0xfd, 0xd6, 0x2b, 0x61, 0xf7, 0xb3, 0xef, 0xba,
	0x27, 0x4c, 0x9c, 0x4e, 0x8e, 0xe3, 0x3f, 0x3b, 0x0a, 0xfa, 0x98, 0x05, 0xfa, 0x6b, 0x27, 0x91,
	0x64, 0x47, 0x7a, 0xef, 0x48, 0x8e, 0xf0, 0xf8, 0xb8, 0x2a, 0x97, 0x4f, 0xff, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x62, 0xb7, 0x41, 0x6a, 0x69, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IndexServiceClient is the client API for IndexService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexServiceClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error)
	BuildIndex(ctx context.Context, in *BuildIndexRequest, opts ...grpc.CallOption) (*BuildIndexResponse, error)
	GetIndexStates(ctx context.Context, in *GetIndexStatesRequest, opts ...grpc.CallOption) (*GetIndexStatesResponse, error)
	GetIndexFilePaths(ctx context.Context, in *GetIndexFilePathsRequest, opts ...grpc.CallOption) (*GetIndexFilePathsResponse, error)
	NotifyBuildIndex(ctx context.Context, in *NotifyBuildIndexRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	DropIndex(ctx context.Context, in *DropIndexRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
}

type indexServiceClient struct {
	cc *grpc.ClientConn
}

func NewIndexServiceClient(cc *grpc.ClientConn) IndexServiceClient {
	return &indexServiceClient{cc}
}

func (c *indexServiceClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error) {
	out := new(RegisterNodeResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/RegisterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) BuildIndex(ctx context.Context, in *BuildIndexRequest, opts ...grpc.CallOption) (*BuildIndexResponse, error) {
	out := new(BuildIndexResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/BuildIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetIndexStates(ctx context.Context, in *GetIndexStatesRequest, opts ...grpc.CallOption) (*GetIndexStatesResponse, error) {
	out := new(GetIndexStatesResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetIndexStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) GetIndexFilePaths(ctx context.Context, in *GetIndexFilePathsRequest, opts ...grpc.CallOption) (*GetIndexFilePathsResponse, error) {
	out := new(GetIndexFilePathsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/GetIndexFilePaths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) NotifyBuildIndex(ctx context.Context, in *NotifyBuildIndexRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/NotifyBuildIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexServiceClient) DropIndex(ctx context.Context, in *DropIndexRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexService/DropIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexServiceServer is the server API for IndexService service.
type IndexServiceServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(context.Context, *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	RegisterNode(context.Context, *RegisterNodeRequest) (*RegisterNodeResponse, error)
	BuildIndex(context.Context, *BuildIndexRequest) (*BuildIndexResponse, error)
	GetIndexStates(context.Context, *GetIndexStatesRequest) (*GetIndexStatesResponse, error)
	GetIndexFilePaths(context.Context, *GetIndexFilePathsRequest) (*GetIndexFilePathsResponse, error)
	NotifyBuildIndex(context.Context, *NotifyBuildIndexRequest) (*commonpb.Status, error)
	DropIndex(context.Context, *DropIndexRequest) (*commonpb.Status, error)
}

// UnimplementedIndexServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIndexServiceServer struct {
}

func (*UnimplementedIndexServiceServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedIndexServiceServer) GetTimeTickChannel(ctx context.Context, req *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedIndexServiceServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedIndexServiceServer) RegisterNode(ctx context.Context, req *RegisterNodeRequest) (*RegisterNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterNode not implemented")
}
func (*UnimplementedIndexServiceServer) BuildIndex(ctx context.Context, req *BuildIndexRequest) (*BuildIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildIndex not implemented")
}
func (*UnimplementedIndexServiceServer) GetIndexStates(ctx context.Context, req *GetIndexStatesRequest) (*GetIndexStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIndexStates not implemented")
}
func (*UnimplementedIndexServiceServer) GetIndexFilePaths(ctx context.Context, req *GetIndexFilePathsRequest) (*GetIndexFilePathsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIndexFilePaths not implemented")
}
func (*UnimplementedIndexServiceServer) NotifyBuildIndex(ctx context.Context, req *NotifyBuildIndexRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyBuildIndex not implemented")
}
func (*UnimplementedIndexServiceServer) DropIndex(ctx context.Context, req *DropIndexRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropIndex not implemented")
}

func RegisterIndexServiceServer(s *grpc.Server, srv IndexServiceServer) {
	s.RegisterService(&_IndexService_serviceDesc, srv)
}

func _IndexService_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetTimeTickChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetTimeTickChannel(ctx, req.(*internalpb.GetTimeTickChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_RegisterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).RegisterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/RegisterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).RegisterNode(ctx, req.(*RegisterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_BuildIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).BuildIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/BuildIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).BuildIndex(ctx, req.(*BuildIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetIndexStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIndexStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetIndexStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetIndexStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetIndexStates(ctx, req.(*GetIndexStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_GetIndexFilePaths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIndexFilePathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).GetIndexFilePaths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/GetIndexFilePaths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).GetIndexFilePaths(ctx, req.(*GetIndexFilePathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_NotifyBuildIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyBuildIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).NotifyBuildIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/NotifyBuildIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).NotifyBuildIndex(ctx, req.(*NotifyBuildIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexService_DropIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServiceServer).DropIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexService/DropIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServiceServer).DropIndex(ctx, req.(*DropIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IndexService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.index.IndexService",
	HandlerType: (*IndexServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _IndexService_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _IndexService_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _IndexService_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "RegisterNode",
			Handler:    _IndexService_RegisterNode_Handler,
		},
		{
			MethodName: "BuildIndex",
			Handler:    _IndexService_BuildIndex_Handler,
		},
		{
			MethodName: "GetIndexStates",
			Handler:    _IndexService_GetIndexStates_Handler,
		},
		{
			MethodName: "GetIndexFilePaths",
			Handler:    _IndexService_GetIndexFilePaths_Handler,
		},
		{
			MethodName: "NotifyBuildIndex",
			Handler:    _IndexService_NotifyBuildIndex_Handler,
		},
		{
			MethodName: "DropIndex",
			Handler:    _IndexService_DropIndex_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index_service.proto",
}

// IndexNodeClient is the client API for IndexNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexNodeClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	DropIndex(ctx context.Context, in *DropIndexRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
}

type indexNodeClient struct {
	cc *grpc.ClientConn
}

func NewIndexNodeClient(cc *grpc.ClientConn) IndexNodeClient {
	return &indexNodeClient{cc}
}

func (c *indexNodeClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexNodeClient) GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexNodeClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexNodeClient) CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/CreateIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexNodeClient) DropIndex(ctx context.Context, in *DropIndexRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.index.IndexNode/DropIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexNodeServer is the server API for IndexNode service.
type IndexNodeServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(context.Context, *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	CreateIndex(context.Context, *CreateIndexRequest) (*commonpb.Status, error)
	DropIndex(context.Context, *DropIndexRequest) (*commonpb.Status, error)
}

// UnimplementedIndexNodeServer can be embedded to have forward compatible implementations.
type UnimplementedIndexNodeServer struct {
}

func (*UnimplementedIndexNodeServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedIndexNodeServer) GetTimeTickChannel(ctx context.Context, req *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedIndexNodeServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedIndexNodeServer) CreateIndex(ctx context.Context, req *CreateIndexRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIndex not implemented")
}
func (*UnimplementedIndexNodeServer) DropIndex(ctx context.Context, req *DropIndexRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropIndex not implemented")
}

func RegisterIndexNodeServer(s *grpc.Server, srv IndexNodeServer) {
	s.RegisterService(&_IndexNode_serviceDesc, srv)
}

func _IndexNode_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexNode_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetTimeTickChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).GetTimeTickChannel(ctx, req.(*internalpb.GetTimeTickChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexNode_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexNode_CreateIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).CreateIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/CreateIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).CreateIndex(ctx, req.(*CreateIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexNode_DropIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexNodeServer).DropIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.index.IndexNode/DropIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexNodeServer).DropIndex(ctx, req.(*DropIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IndexNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.index.IndexNode",
	HandlerType: (*IndexNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _IndexNode_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _IndexNode_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _IndexNode_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "CreateIndex",
			Handler:    _IndexNode_CreateIndex_Handler,
		},
		{
			MethodName: "DropIndex",
			Handler:    _IndexNode_DropIndex_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index_service.proto",
}
